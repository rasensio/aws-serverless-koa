AWSTemplateFormatVersion: 2010-09-09
Description: Upgoal Backend Webapp API
Transform: AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Default: dev
  LogLevel:
    Type: String
    Default: debug
  TableUsers:
    Type: String
  TableVision:
    Type: String
  TableGoals:
    Type: String
Globals:
  Function:
    CodeUri: ./
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 60
    Environment:
      Variables:
        ENV:
          Ref: Environment
        LOG_LEVEL:
          Ref: LogLevel
        TABLE_USERS:
          Ref: TableUsers
        TABLE_GOALS:
          Ref: TableGoals
        TABLE_VISION:
          Ref: TableVision
    Tags:
      Application: UpgoalApi
      Environment:
        Ref: Environment
Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      FailOnWarnings: true
      CorsConfiguration:
        AllowCredentials: true
        AllowOrigins:
        - https://localhost:8080
        - https://app.upgoal.com
        AllowHeaders:
        - x-apigateway-header
        - access-control-*
        - origin
        - content-type
        - x-requested-with
        - accept
        - authorization
        - referer
        AllowMethods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - DELETE
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
          - AccessLogs
          - Arn
        Format: '{"requestId": "$context.requestId", "userAgent": "$context.identity.userAgent",
          "httpMethod": "$context.httpMethod", "path": "$context.path", "status":
          "$context.status", "protocol": "$context.protocol", "integrationStatus":
          "$context.integrationStatus", "responseLatency": "$context.responseLatency"
          }'
      Tags:
        Application: UpgoalApi
        Environment:
          Ref: Environment
      Auth:
        DefaultAuthorizer: OpenIdAuth
        Authorizers:
          OpenIdAuth:
            JwtConfiguration:
              issuer: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_gOynznNra
              audience:
              - 4r1t01ua8on74t3i4a3mlp6t4q
            IdentitySource: $request.header.Authorization
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: auth/index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableUsers
      Events:
        Requests:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/auth/{proxy+}
            Method: ANY
            Auth:
              Authorizer: NONE
      CodeUri: s3://upgoal-webapp-api-deployment-dev/86d4cc5e2b3ed0b1e22b657fb06f4eb9
  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user/index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableUsers
      Events:
        Requests:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/users/{proxy+}
            Method: ANY
      CodeUri: s3://upgoal-webapp-api-deployment-dev/86d4cc5e2b3ed0b1e22b657fb06f4eb9
  VisionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: vision/index.handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableVision
      Events:
        Cors:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/vision/{proxy+}
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        Gets:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/vision/{proxy+}
            Method: GET
        Posts:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/vision/{proxy+}
            Method: POST
        Puts:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Path: /v1/vision/{proxy+}
            Method: PUT
      CodeUri: s3://upgoal-webapp-api-deployment-dev/86d4cc5e2b3ed0b1e22b657fb06f4eb9
  AccessLogs:
    Type: AWS::Logs::LogGroup
Outputs:
  HttpApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/
